.. change::
    :tags: usecase, orm
    :tickets: 7837

    Adjustments to the :class:`_orm.Session` in terms of extensibility,
    as well as updates to the :class:`.ShardedSession` extension:

    * :meth:`_orm.Session.get` now accepts
      :paramref:`_orm.Session.get.bind_arguments`, which in particular may be
      useful when using the horizontal sharding extension.

    * :meth:`_orm.Session.get_bind` accepts arbitrary kw arguments, which
      assists in developing code that uses a :class:`_orm.Session` class which
      overrides this method with additional arguments.

    * Added a new ORM execution option ``identity_token`` which may be used
      to directly affect the "identity token" that will be associated with
      newly loaded ORM objects.  This token is how sharding approaches
      (namely the :class:`.ShardedSession`, but can be used in other cases
      as well) separate object identities across different "shards".

      .. seealso::

          :ref:`queryguide_identity_token`

    * The :meth:`_orm.SessionEvents.do_orm_execute` event hook may now be used
      to affect all ORM-related options, including ``autoflush``,
      ``populate_existing``, and ``yield_per``; these options are re-consumed
      subsequent to event hooks being invoked before they are acted upon.
      Previously, options like ``autoflush`` would have been already evaluated
      at this point. The new ``identity_token`` option is also supported in
      this mode and is now used by the horizontal sharding extension.


    * The :class:`.ShardedSession` class replaces the
      :paramref:`.ShardedSession.id_chooser` hook with a new hook
      :paramref:`.ShardedSession.identity_chooser`, which no longer relies upon
      the legacy :class:`_orm.Query` object.
      :paramref:`.ShardedSession.id_chooser` is still accepted in place of
      :paramref:`.ShardedSession.identity_chooser` with a deprecation warning.
